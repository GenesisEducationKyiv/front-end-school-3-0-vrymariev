// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=.ts"
// @generated from file proto/music_service.proto (package music, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ActiveTrackRequest, ActiveTrackResponse, AddTrackRequest, DeleteResponse, DeleteTrackFileRequest, DeleteTrackRequest, DeleteTracksRequest, Empty, GenresResponse, GetTrackBySlugRequest, ListTracksRequest, ListTracksResponse, Track, TrackFileResponse, UpdateTrackRequest, UploadTrackFileRequest } from "./music_service_pb.ts";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service music.TrackService
 */
export const TrackService = {
  typeName: "music.TrackService",
  methods: {
    /**
     * @generated from rpc music.TrackService.ListTracks
     */
    listTracks: {
      name: "ListTracks",
      I: ListTracksRequest,
      O: ListTracksResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc music.TrackService.GetTrackBySlug
     */
    getTrackBySlug: {
      name: "GetTrackBySlug",
      I: GetTrackBySlugRequest,
      O: Track,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc music.TrackService.AddTrack
     */
    addTrack: {
      name: "AddTrack",
      I: AddTrackRequest,
      O: Track,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc music.TrackService.UpdateTrack
     */
    updateTrack: {
      name: "UpdateTrack",
      I: UpdateTrackRequest,
      O: Track,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc music.TrackService.DeleteTrack
     */
    deleteTrack: {
      name: "DeleteTrack",
      I: DeleteTrackRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc music.TrackService.DeleteTracks
     */
    deleteTracks: {
      name: "DeleteTracks",
      I: DeleteTracksRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc music.TrackService.UploadTrackFile
     */
    uploadTrackFile: {
      name: "UploadTrackFile",
      I: UploadTrackFileRequest,
      O: TrackFileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc music.TrackService.DeleteTrackFile
     */
    deleteTrackFile: {
      name: "DeleteTrackFile",
      I: DeleteTrackFileRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Track stream
     *
     * @generated from rpc music.TrackService.ActiveTrackStream
     */
    activeTrackStream: {
      name: "ActiveTrackStream",
      I: ActiveTrackRequest,
      O: ActiveTrackResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

/**
 * @generated from service music.GenreService
 */
export const GenreService = {
  typeName: "music.GenreService",
  methods: {
    /**
     * @generated from rpc music.GenreService.GetAllGenres
     */
    getAllGenres: {
      name: "GetAllGenres",
      I: Empty,
      O: GenresResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

